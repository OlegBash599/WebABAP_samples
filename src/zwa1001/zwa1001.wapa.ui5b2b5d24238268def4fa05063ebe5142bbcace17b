/**                                                                                                                                                                                                                                                            
* This file was auto-generated by SAP Web IDE build and includes all                                                                                                                                                                                           
* the source files required by SAPUI5 runtime for performance optimization.                                                                                                                                                                                    
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.                                                                                                                                                                   
*/                                                                                                                                                                                                                                                             
jQuery.sap.registerPreloadedModules({                                                                                                                                                                                                                          
	"version": "2.0",                                                                                                                                                                                                                                             
	"name": "zwa1001/Component-preload",                                                                                                                                                                                                                          
	"modules": {                                                                                                                                                                                                                                                  
		"zwa1001/Component.js": "jQuery.sap.declare(\"zwa1001.Component\");\nsap.ui.getCore().loadLibrary(\"sap.ui.generic.app\");\njQuery.sap.require(\"sap.ui.generic.app.AppComponent\");\n\nsap.ui.generic.app.AppComponent.extend(\"zwa1001.Component\", {\n\tm+
etadata: {\n\t\t\"manifest\": \"json\"\n\t}\n});",                                                                                                                                                                                                             
		"zwa1001/localService/mockserver.js": "sap.ui.define([\n\t\"sap/ui/core/util/MockServer\"\n], function(MockServer) {\n\t\"use strict\";\n\tvar oMockServer,\n\t\t_sAppModulePath = \"zwa1001/\",\n\t\t_sJsonFilesModulePath = _sAppModulePath + \"localServi+
ce/mockdata\";\n\n\treturn {\n\n\t\t/**\n\t\t * Initializes the mock server.\n\t\t * You can configure the delay with the URL parameter \"serverDelay\".\n\t\t * The local mock data in this folder is returned instead of the real data for testing.\n\t\t * +
@public\n\t\t */\n\n\t\tinit: function() {\n\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\n\t\t\t\tsJsonFilesUrl = jQuery.sap.getModulePath(_sJsonFilesModulePath),\n\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\+
", \".json\"),\n\t\t\t\tsEntity = \"VarHeadSet\",\n\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\n\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\n\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\n\t\t\t\toDataSo+
urce = oManifest[\"sap.app\"].dataSources,\n\t\t\t\toMainDataSource = oDataSource.mainService,\n\t\t\t\tsMetadataUrl = jQuery.sap.getModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\n\t\t\t\t// ensure the+
re is a trailing slash\n\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.uri + \"/\",\n\t\t\t\taAnnotations = oMainDataSource.settings.annotations;\n\n\t\t\toMockServer = new MockServer({\n\t\t\t\trootUr+
i: sMockServerUrl\n\t\t\t});\n\n\t\t\t// configure mock server with a delay of 1s\n\t\t\tMockServer.config({\n\t\t\t\tautoRespond: true,\n\t\t\t\tautoRespondAfter: (oUriParameters.get(\"serverDelay\") || 1000)\n\t\t\t});\n\n\t\t\t// load local mock data\+
n\t\t\toMockServer.simulate(sMetadataUrl, {\n\t\t\t\tsMockdataBaseUrl: sJsonFilesUrl,\n\t\t\t\tbGenerateMissingMockData: true\n\t\t\t});\n\n\t\t\tvar aRequests = oMockServer.getRequests(),\n\t\t\t\tfnResponse = function(iErrCode, sMessage, aRequest) {\n\+
t\t\t\t\taRequest.response = function(oXhr) {\n\t\t\t\t\t\toXhr.respond(iErrCode, {\n\t\t\t\t\t\t\t\"Content-Type\": \"text/plain;charset=utf-8\"\n\t\t\t\t\t\t}, sMessage);\n\t\t\t\t\t};\n\t\t\t\t};\n\n\t\t\t// handling the metadata error test\n\t\t\tif +
(oUriParameters.get(\"metadataError\")) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\n\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\n\+
t\t\t// Handling request errors\n\t\t\tif (sErrorParam) {\n\t\t\t\taRequests.forEach(function(aEntry) {\n\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\n\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\n\t\t\t\t\t}\n\t\t\t\t});\n\t+
\t\t}\n\t\t\toMockServer.start();\n\n\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\n\n\t\t\tif (aAnnotations) {\n\t\t\t\taAnnotations.forEach(function(sAnnotationName) {\n\t\t\t\t\tvar oAnnotation = oDataSource[sAnnotationName],\n\t\t\t\+
t\t\tsUri = oAnnotation.uri,\n\t\t\t\t\t\tsLocalUri = jQuery.sap.getModulePath(_sAppModulePath + oAnnotation.settings.localUri.replace(\".xml\", \"\"), \".xml\");\n\n\t\t\t\t\t///annotiaons\n\t\t\t\t\tnew MockServer({\n\t\t\t\t\t\trootUri: sUri,\n\t\t\t\+
t\t\trequests: [{\n\t\t\t\t\t\t\tmethod: \"GET\",\n\t\t\t\t\t\t\tpath: new RegExp(\"\"),\n\t\t\t\t\t\t\tresponse: function(oXhr) {\n\t\t\t\t\t\t\t\tjQuery.sap.require(\"jquery.sap.xml\");\n\n\t\t\t\t\t\t\t\tvar oAnnotations = jQuery.sap.sjax({\n\t\t\t\t\+
t\t\t\t\turl: sLocalUri,\n\t\t\t\t\t\t\t\t\tdataType: \"xml\"\n\t\t\t\t\t\t\t\t}).data;\n\n\t\t\t\t\t\t\t\toXhr.respondXML(200, {}, jQuery.sap.serializeXML(oAnnotations));\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}]\n\n\t\t\t\t\t}).sta+
rt();\n\n\t\t\t\t});\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * @public returns the mockserver of the app, should be used in integration tests\n\t\t * @returns {sap.ui.core.util.MockServer}\n\t\t */\n\t\tgetMockServer: function() {\n\t\t\treturn oMockServer;\+
n\t\t}\n\t};\n\n});"                                                                                                                                                                                                                                           
	}                                                                                                                                                                                                                                                             
});                                                                                                                                                                                                                                                            