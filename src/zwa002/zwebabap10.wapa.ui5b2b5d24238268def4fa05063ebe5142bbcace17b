/**                                                                                                                                                                                                                                                            
* This file was auto-generated by SAP Web IDE build and includes all                                                                                                                                                                                           
* the source files required by SAPUI5 runtime for performance optimization.                                                                                                                                                                                    
* PLEASE DO NOT EDIT THIS FILE!! Changes will be overwritten the next time the build is run.                                                                                                                                                                   
*/                                                                                                                                                                                                                                                             
jQuery.sap.registerPreloadedModules({                                                                                                                                                                                                                          
	"version": "2.0",                                                                                                                                                                                                                                             
	"name": "zwaworklist10/ZWEBABAP_WORKLIST10/Component-preload",                                                                                                                                                                                                
	"modules": {                                                                                                                                                                                                                                                  
		"zwaworklist10/ZWEBABAP_WORKLIST10/Component.js": "/* global document */\r\nsap.ui.define([\r\n\t\t\"sap/ui/core/UIComponent\",\r\n\t\t\"sap/ui/Device\",\r\n\t\t\"zwaworklist10/ZWEBABAP_WORKLIST10/model/models\",\r\n\t\t\"zwaworklist10/ZWEBABAP_WORKLIS+
T10/controller/ErrorHandler\"\r\n\t], function (UIComponent, Device, models, ErrorHandler) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn UIComponent.extend(\"zwaworklist10.ZWEBABAP_WORKLIST10.Component\", {\r\n\r\n\t\t\tmetadata : {\r\n\t\t\t\tmanifest: \"j+
son\"\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\r\n\t\t\t * In this function, the device models are set and the router is initialized.\r\n\t\t\+
t * @public\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tinit : function () {\r\n\t\t\t\t// call the base component's init function\r\n\t\t\t\tUIComponent.prototype.init.apply(this, arguments);\r\n\r\n\t\t\t\t// initialize the error handler with the compo+
nent\r\n\t\t\t\tthis._oErrorHandler = new ErrorHandler(this);\r\n\r\n\t\t\t\t// set the device model\r\n\t\t\t\tthis.setModel(models.createDeviceModel(), \"device\");\r\n\r\n\t\t\t\t// create the views based on the url/hash\r\n\t\t\t\tthis.getRouter().in+
itialize();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * The component is destroyed by UI5 automatically.\r\n\t\t\t * In this method, the ErrorHandler is destroyed.\r\n\t\t\t * @public\r\n\t\t\t * @override\r\n\t\t\t */\r\n\t\t\tdestroy : function () {\r\n\t+
\t\t\tthis._oErrorHandler.destroy();\r\n\t\t\t\t// call the base component's destroy function\r\n\t\t\t\tUIComponent.prototype.destroy.apply(this, arguments);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * This method can be called to determine whether the sap+
UiSizeCompact or sapUiSizeCozy\r\n\t\t\t * design mode class should be set, which influences the size appearance of some controls.\r\n\t\t\t * @public\r\n\t\t\t * @return {string} css class, either 'sapUiSizeCompact' or 'sapUiSizeCozy' - or an empty stri+
ng if no css class should be set\r\n\t\t\t */\r\n\t\t\tgetContentDensityClass : function() {\r\n\t\t\t\tif (this._sContentDensityClass === undefined) {\r\n\t\t\t\t\t// check whether FLP has already set the content density class; do nothing in this case\r+
\n\t\t\t\t\tif (jQuery(document.body).hasClass(\"sapUiSizeCozy\") || jQuery(document.body).hasClass(\"sapUiSizeCompact\")) {\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"\";\r\n\t\t\t\t\t} else if (!Device.support.touch) { // apply \"compact\" mode if t+
ouch is not supported\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCompact\";\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\t// \"cozy\" in case of touch support; default for most sap.m controls, but needed for desktop-first controls like sap.ui.table.Ta+
ble\r\n\t\t\t\t\t\tthis._sContentDensityClass = \"sapUiSizeCozy\";\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn this._sContentDensityClass;\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",                                                                      
		"zwaworklist10/ZWEBABAP_WORKLIST10/view/NotFound.view.xml": "<mvc:View\r\n\tcontrollerName=\"zwaworklist10.ZWEBABAP_WORKLIST10.controller.NotFound\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<MessagePage\r\n\t\ttitle=\"{i18n>not+
FoundTitle}\"\r\n\t\ttext=\"{i18n>notFoundText}\"\r\n\t\ticon=\"{sap-icon://document}\"\r\n\t\tid=\"page\"\r\n\t\tdescription=\"\">\r\n\t\t<customDescription>\r\n\t\t\t<Link id=\"link\" text=\"{i18n>backToWorklist}\" press=\"onLinkPressed\" />\r\n\t\t</c+
ustomDescription>\r\n\t</MessagePage>\r\n\r\n</mvc:View>",                                                                                                                                                                                                     
		"zwaworklist10/ZWEBABAP_WORKLIST10/controller/App.controller.js": "sap.ui.define([\r\n\t\t\"zwaworklist10/ZWEBABAP_WORKLIST10/controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\"\r\n\t], function (BaseController, JSONModel) {\r\n\t\t\"us+
e strict\";\r\n\r\n\t\treturn BaseController.extend(\"zwaworklist10.ZWEBABAP_WORKLIST10.controller.App\", {\r\n\r\n\t\t\tonInit : function () {\r\n\t\t\t\tvar oViewModel,\r\n\t\t\t\t\tfnSetAppNotBusy,\r\n\t\t\t\t\tiOriginalBusyDelay = this.getView().getB+
usyIndicatorDelay();\r\n\r\n\t\t\t\toViewModel = new JSONModel({\r\n\t\t\t\t\tbusy : true,\r\n\t\t\t\t\tdelay : 0\r\n\t\t\t\t});\r\n\t\t\t\tthis.setModel(oViewModel, \"appView\");\r\n\r\n\t\t\t\tfnSetAppNotBusy = function() {\r\n\t\t\t\t\toViewModel.setP+
roperty(\"/busy\", false);\r\n\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t\t};\r\n\r\n\t\t\t\t// disable busy indication when the metadata is loaded and in case of errors\r\n\t\t\t\tthis.getOwnerComponent().getModel().metad+
ataLoaded().\r\n\t\t\t\t    then(fnSetAppNotBusy);\r\n\t\t\t\tthis.getOwnerComponent().getModel().attachMetadataFailed(fnSetAppNotBusy);\r\n\r\n\t\t\t\t// apply content density mode to root view\r\n\t\t\t\tthis.getView().addStyleClass(this.getOwnerCompon+
ent().getContentDensityClass());\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n);",                                                                                                                                                                                      
		"zwaworklist10/ZWEBABAP_WORKLIST10/controller/Worklist.controller.js": "/*global location history */\r\nsap.ui.define([\r\n\t\t\"zwaworklist10/ZWEBABAP_WORKLIST10/controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\",\r\n\t\t\"zwaworklist+
10/ZWEBABAP_WORKLIST10/model/formatter\",\r\n\t\t\"sap/ui/model/Filter\",\r\n\t\t\"sap/ui/model/FilterOperator\"\r\n\t], function (BaseController, JSONModel, formatter, Filter, FilterOperator) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.ext+
end(\"zwaworklist10.ZWEBABAP_WORKLIST10.controller.Worklist\", {\r\n\r\n\t\t\tformatter: formatter,\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* lifecycle methods                                           */\+
r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Called when the worklist controller is instantiated.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonInit : function () {\r\n\t\t\t\tvar oViewModel,\r\n\t+
\t\t\t\tiOriginalBusyDelay,\r\n\t\t\t\t\toTable = this.byId(\"table\");\r\n\r\n\t\t\t\t// Put down worklist table's original value for busy indicator delay,\r\n\t\t\t\t// so it can be restored later on. Busy handling on the table is\r\n\t\t\t\t// taken c+
are of by the table itself.\r\n\t\t\t\tiOriginalBusyDelay = oTable.getBusyIndicatorDelay();\r\n\t\t\t\t// keeps the search state\r\n\t\t\t\tthis._aTableSearchState = [];\r\n\r\n\t\t\t\t// Model used to manipulate control states\r\n\t\t\t\toViewModel = ne+
w JSONModel({\r\n\t\t\t\t\tworklistTableTitle : this.getResourceBundle().getText(\"worklistTableTitle\"),\r\n\t\t\t\t\tshareOnJamTitle: this.getResourceBundle().getText(\"worklistTitle\"),\r\n\t\t\t\t\tshareSendEmailSubject: this.getResourceBundle().getT+
ext(\"shareSendEmailWorklistSubject\"),\r\n\t\t\t\t\tshareSendEmailMessage: this.getResourceBundle().getText(\"shareSendEmailWorklistMessage\", [location.href]),\r\n\t\t\t\t\ttableNoDataText : this.getResourceBundle().getText(\"tableNoDataText\"),\r\n\t\+
t\t\t\ttableBusyDelay : 0\r\n\t\t\t\t});\r\n\t\t\t\tthis.setModel(oViewModel, \"worklistView\");\r\n\r\n\t\t\t\t// Make sure, busy indication is showing immediately so there is no\r\n\t\t\t\t// break after the busy indication for loading the view's meta +
data is\r\n\t\t\t\t// ended (see promise 'oWhenMetadataIsLoaded' in AppController)\r\n\t\t\t\toTable.attachEventOnce(\"updateFinished\", function(){\r\n\t\t\t\t\t// Restore original busy indicator delay for worklist's table\r\n\t\t\t\t\toViewModel.setPro+
perty(\"/tableBusyDelay\", iOriginalBusyDelay);\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* event handlers                                              */\r\n\t\t\t/* =============+
============================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Triggered by the table's 'updateFinished' event: after new table\r\n\t\t\t * data is available, this handler method updates the table counter.\r\n\t\t\t * This should only hap+
pen if the update was successful, which is\r\n\t\t\t * why this handler is attached to 'updateFinished' and not to the\r\n\t\t\t * table's list binding's 'dataReceived' method.\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the update finished event\r\n\t+
\t\t * @public\r\n\t\t\t */\r\n\t\t\tonUpdateFinished : function (oEvent) {\r\n\t\t\t\t// update the worklist's object counter after the table update\r\n\t\t\t\tvar sTitle,\r\n\t\t\t\t\toTable = oEvent.getSource(),\r\n\t\t\t\t\tiTotalItems = oEvent.getPa+
rameter(\"total\");\r\n\t\t\t\t// only update the counter if the length is final and\r\n\t\t\t\t// the table is not empty\r\n\t\t\t\tif (iTotalItems && oTable.getBinding(\"items\").isLengthFinal()) {\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText+
(\"worklistTableTitleCount\", [iTotalItems]);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tsTitle = this.getResourceBundle().getText(\"worklistTableTitle\");\r\n\t\t\t\t}\r\n\t\t\t\tthis.getModel(\"worklistView\").setProperty(\"/worklistTableTitle\", sTitle);\r\n\t\+
t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler when a table item gets pressed\r\n\t\t\t * @param {sap.ui.base.Event} oEvent the table selectionChange event\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonPress : function (oEvent) {\r\n\t\t\t\t// The source+
 is the list item that got pressed\r\n\t\t\t\tthis._showObject(oEvent.getSource());\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for navigating back.\r\n\t\t\t * We navigate back in the browser historz\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\t+
onNavBack : function() {\r\n\t\t\t\thistory.go(-1);\r\n\t\t\t},\r\n\r\n\r\n\t\t\tonSearch : function (oEvent) {\r\n\t\t\t\tif (oEvent.getParameters().refreshButtonPressed) {\r\n\t\t\t\t\t// Search field's 'refresh' button has been pressed.\r\n\t\t\t\t\t/+
/ This is visible if you select any master list item.\r\n\t\t\t\t\t// In this case no new search is triggered, we only\r\n\t\t\t\t\t// refresh the list binding.\r\n\t\t\t\t\tthis.onRefresh();\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar aTableSearchState = [];\r+
\n\t\t\t\t\tvar sQuery = oEvent.getParameter(\"query\");\r\n\r\n\t\t\t\t\tif (sQuery && sQuery.length > 0) {\r\n\t\t\t\t\t\taTableSearchState = [new Filter(\"Description\", FilterOperator.Contains, sQuery)];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tthis._applySearch(+
aTableSearchState);\r\n\t\t\t\t}\r\n\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler for refresh event. Keeps filter, sort\r\n\t\t\t * and group settings and refreshes the list binding.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonRefresh : functio+
n () {\r\n\t\t\t\tvar oTable = this.byId(\"table\");\r\n\t\t\t\toTable.getBinding(\"items\").refresh();\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* internal methods                               +
             */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Shows the selected item on the object page\r\n\t\t\t * On phones a additional history entry is created\r\n\t\t\t * @param {sap.m.Objec+
tListItem} oItem selected Item\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_showObject : function (oItem) {\r\n\t\t\t\tthis.getRouter().navTo(\"object\", {\r\n\t\t\t\t\tobjectId: oItem.getBindingContext().getProperty(\"Name\")\r\n\t\t\t\t});\r\n\t\t\t},\r+
\n\r\n\t\t\t/**\r\n\t\t\t * Internal helper method to apply both filter and search state together on the list binding\r\n\t\t\t * @param {sap.ui.model.Filter[]} aTableSearchState An array of filters for the search\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\+
t\t_applySearch: function(aTableSearchState) {\r\n\t\t\t\tvar oTable = this.byId(\"table\"),\r\n\t\t\t\t\toViewModel = this.getModel(\"worklistView\");\r\n\t\t\t\toTable.getBinding(\"items\").filter(aTableSearchState, \"Application\");\r\n\t\t\t\t// chan+
ges the noDataText of the list in case there are no filter results\r\n\t\t\t\tif (aTableSearchState.length !== 0) {\r\n\t\t\t\t\toViewModel.setProperty(\"/tableNoDataText\", this.getResourceBundle().getText(\"worklistNoDataWithSearchText\"));\r\n\t\t\t\t+
}\r\n\t\t\t}\r\n\r\n\t\t});\r\n\t}\r\n);",                                                                                                                                                                                                                     
		"zwaworklist10/ZWEBABAP_WORKLIST10/controller/Object.controller.js": "/*global location*/\r\nsap.ui.define([\r\n\t\t\"zwaworklist10/ZWEBABAP_WORKLIST10/controller/BaseController\",\r\n\t\t\"sap/ui/model/json/JSONModel\",\r\n\t\t\"sap/ui/core/routing/Hi+
story\",\r\n\t\t\"zwaworklist10/ZWEBABAP_WORKLIST10/model/formatter\"\r\n\t], function (\r\n\t\tBaseController,\r\n\t\tJSONModel,\r\n\t\tHistory,\r\n\t\tformatter\r\n\t) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.extend(\"zwaworklist10.ZWE+
BABAP_WORKLIST10.controller.Object\", {\r\n\r\n\t\t\tformatter: formatter,\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* lifecycle methods                                           */\r\n\t\t\t/* =============+
============================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Called when the worklist controller is instantiated.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonInit : function () {\r\n\t\t\t\t// Model used to manipulate control states. Th+
e chosen values make sure,\r\n\t\t\t\t// detail page is busy indication immediately so there is no break in\r\n\t\t\t\t// between the busy indication for loading the view's meta data\r\n\t\t\t\tvar iOriginalBusyDelay,\r\n\t\t\t\t\toViewModel = new JSONMo+
del({\r\n\t\t\t\t\t\tbusy : true,\r\n\t\t\t\t\t\tdelay : 0\r\n\t\t\t\t\t});\r\n\r\n\t\t\t\tthis.getRouter().getRoute(\"object\").attachPatternMatched(this._onObjectMatched, this);\r\n\r\n\t\t\t\t// Store original busy indicator delay, so it can be restor+
ed later on\r\n\t\t\t\tiOriginalBusyDelay = this.getView().getBusyIndicatorDelay();\r\n\t\t\t\tthis.setModel(oViewModel, \"objectView\");\r\n\t\t\t\tthis.getOwnerComponent().getModel().metadataLoaded().then(function () {\r\n\t\t\t\t\t\t// Restore origina+
l busy indicator delay for the object view\r\n\t\t\t\t\t\toViewModel.setProperty(\"/delay\", iOriginalBusyDelay);\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t},\r\n\r\n\t\t\t/* =========================================================== */\r\n\t\t\t/* event ha+
ndlers                                              */\r\n\t\t\t/* =========================================================== */\r\n\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler  for navigating back.\r\n\t\t\t * It there is a history entry we go one step +
back in the browser history\r\n\t\t\t * If not, it will replace the current entry of the browser history with the worklist route.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonNavBack : function() {\r\n\t\t\t\tvar sPreviousHash = History.getInstance().getP+
reviousHash();\r\n\r\n\t\t\t\tif (sPreviousHash !== undefined) {\r\n\t\t\t\t\thistory.go(-1);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.getRouter().navTo(\"worklist\", {}, true);\r\n\t\t\t\t}\r\n\t\t\t},\r\n\r\n\t\t\t/* ======================================+
===================== */\r\n\t\t\t/* internal methods                                            */\r\n\t\t\t/* =========================================================== */\r\n\r\n\t\t\t/**\r\n\t\t\t * Binds the view to the object path.\r\n\t\t\t * @fu+
nction\r\n\t\t\t * @param {sap.ui.base.Event} oEvent pattern match event in route 'object'\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_onObjectMatched : function (oEvent) {\r\n\t\t\t\tvar sObjectId =  oEvent.getParameter(\"arguments\").objectId;\r\n\t\t\+
t\tthis.getModel().metadataLoaded().then( function() {\r\n\t\t\t\t\tvar sObjectPath = this.getModel().createKey(\"VarHeadSet\", {\r\n\t\t\t\t\t\tName :  sObjectId\r\n\t\t\t\t\t});\r\n\t\t\t\t\tthis._bindView(\"/\" + sObjectPath);\r\n\t\t\t\t}.bind(this))+
;\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Binds the view to the object path.\r\n\t\t\t * @function\r\n\t\t\t * @param {string} sObjectPath path to the object to be bound\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_bindView : function (sObjectPath) {\r\n+
\t\t\t\tvar oViewModel = this.getModel(\"objectView\"),\r\n\t\t\t\t\toDataModel = this.getModel();\r\n\r\n\t\t\t\tthis.getView().bindElement({\r\n\t\t\t\t\tpath: sObjectPath,\r\n\t\t\t\t\tevents: {\r\n\t\t\t\t\t\tchange: this._onBindingChange.bind(this),+
\r\n\t\t\t\t\t\tdataRequested: function () {\r\n\t\t\t\t\t\t\toDataModel.metadataLoaded().then(function () {\r\n\t\t\t\t\t\t\t\t// Busy indicator on view should only be set if metadata is loaded,\r\n\t\t\t\t\t\t\t\t// otherwise there may be two busy indi+
cations next to each other on the\r\n\t\t\t\t\t\t\t\t// screen. This happens because route matched handler already calls '_bindView'\r\n\t\t\t\t\t\t\t\t// while metadata is loaded.\r\n\t\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", true);\r\n\t\t\t\t\t+
\t\t});\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tdataReceived: function () {\r\n\t\t\t\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t},\r\n\r\n\t\t\t_onBindingChange : function () {\r\n\t\t\t\tvar oView +
= this.getView(),\r\n\t\t\t\t\toViewModel = this.getModel(\"objectView\"),\r\n\t\t\t\t\toElementBinding = oView.getElementBinding();\r\n\r\n\t\t\t\t// No data for the binding\r\n\t\t\t\tif (!oElementBinding.getBoundContext()) {\r\n\t\t\t\t\tthis.getRoute+
r().getTargets().display(\"objectNotFound\");\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar oResourceBundle = this.getResourceBundle(),\r\n\t\t\t\t\toObject = oView.getBindingContext().getObject(),\r\n\t\t\t\t\tsObjectId = oObject.Name,\r\n\t\t\t\+
t\tsObjectName = oObject.Description;\r\n\r\n\t\t\t\toViewModel.setProperty(\"/busy\", false);\r\n\r\n\t\t\t\toViewModel.setProperty(\"/shareSendEmailSubject\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectSubject\", [sObjectId]));\r\n\t\t\t\+
toViewModel.setProperty(\"/shareSendEmailMessage\",\r\n\t\t\t\toResourceBundle.getText(\"shareSendEmailObjectMessage\", [sObjectName, sObjectId, location.href]));\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",                                                
		"zwaworklist10/ZWEBABAP_WORKLIST10/localService/mockserver.js": "sap.ui.define([\r\n\t\t\"sap/ui/core/util/MockServer\"\r\n\t], function (MockServer) {\r\n\t\t\"use strict\";\r\n\r\n\t\tvar oMockServer,\r\n\t\t\t_sAppModulePath = \"zwaworklist10/ZWEBAB+
AP_WORKLIST10/\",\r\n\t\t\t_sJsonFilesModulePath = _sAppModulePath + \"localService/mockdata\";\r\n\r\n\t\treturn {\r\n\r\n\t\t\t/**\r\n\t\t\t * Initializes the mock server.\r\n\t\t\t * You can configure the delay with the URL parameter \"serverDelay\".\+
r\n\t\t\t * The local mock data in this folder is returned instead of the real data for testing.\r\n\t\t\t * @public\r\n\t\t\t */\r\n\r\n\t\t\tinit : function () {\r\n\t\t\t\tvar oUriParameters = jQuery.sap.getUriParameters(),\r\n\t\t\t\t\tsJsonFilesUrl +
= jQuery.sap.getModulePath(_sJsonFilesModulePath),\r\n\t\t\t\t\tsManifestUrl = jQuery.sap.getModulePath(_sAppModulePath + \"manifest\", \".json\"),\r\n\t\t\t\t\tsEntity = \"VarHeadSet\",\r\n\t\t\t\t\tsErrorParam = oUriParameters.get(\"errorType\"),\r\n\t+
\t\t\t\tiErrorCode = sErrorParam === \"badRequest\" ? 400 : 500,\r\n\t\t\t\t\toManifest = jQuery.sap.syncGetJSON(sManifestUrl).data,\r\n\t\t\t\t\toMainDataSource = oManifest[\"sap.app\"].dataSources.mainService,\r\n\t\t\t\t\tsMetadataUrl = jQuery.sap.get+
ModulePath(_sAppModulePath + oMainDataSource.settings.localUri.replace(\".xml\", \"\"), \".xml\"),\r\n\t\t\t\t\t// ensure there is a trailing slash\r\n\t\t\t\t\tsMockServerUrl = /.*\\/$/.test(oMainDataSource.uri) ? oMainDataSource.uri : oMainDataSource.u+
ri + \"/\";\r\n\r\n\t\t\t\toMockServer = new MockServer({\r\n\t\t\t\t\trootUri : sMockServerUrl\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// configure mock server with a delay of 1s\r\n\t\t\t\tMockServer.config({\r\n\t\t\t\t\tautoRespond : true,\r\n\t\t\t\t\tautoRes+
pondAfter : (oUriParameters.get(\"serverDelay\") || 1000)\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Simulate a manual back-end call\r\n\t\t\t\toMockServer.simulate(sMetadataUrl, {\r\n\t\t\t\t\tsMockdataBaseUrl : sJsonFilesUrl,\r\n\t\t\t\t\tbGenerateMissingMockDat+
a : true\r\n\t\t\t\t});\r\n\r\n\t\t\t\tvar aRequests = oMockServer.getRequests(),\r\n\t\t\t\t\tfnResponse = function (iErrCode, sMessage, aRequest) {\r\n\t\t\t\t\t\taRequest.response = function(oXhr){\r\n\t\t\t\t\t\t\toXhr.respond(iErrCode, {\"Content-Ty+
pe\": \"text/plain;charset=utf-8\"}, sMessage);\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t// handling the metadata error test\r\n\t\t\t\tif (oUriParameters.get(\"metadataError\")) {\r\n\t\t\t\t\taRequests.forEach( function ( aEntry ) {\r\n\t\t\t\t+
\t\tif (aEntry.path.toString().indexOf(\"$metadata\") > -1) {\r\n\t\t\t\t\t\t\tfnResponse(500, \"metadata Error\", aEntry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Handling request errors\r\n\t\t\t\tif (sErrorParam) {\r\n\t\t\t\t+
\taRequests.forEach( function ( aEntry ) {\r\n\t\t\t\t\t\tif (aEntry.path.toString().indexOf(sEntity) > -1) {\r\n\t\t\t\t\t\t\tfnResponse(iErrorCode, sErrorParam, aEntry);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\toMockServer.setRequests(+
aRequests);\r\n\t\t\t\toMockServer.start();\r\n\r\n\t\t\t\tjQuery.sap.log.info(\"Running the app with mock data\");\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * @public returns the mockserver of the app, should be used in integration tests\r\n\t\t\t * @retur+
ns {sap.ui.core.util.MockServer} the mockserver instance\r\n\t\t\t */\r\n\t\t\tgetMockServer : function () {\r\n\t\t\t\treturn oMockServer;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t}\r\n);",                                                                            
		"zwaworklist10/ZWEBABAP_WORKLIST10/view/Worklist.view.xml": "<mvc:View\r\n\tcontrollerName=\"zwaworklist10.ZWEBABAP_WORKLIST10.controller.Worklist\"\r\n\txmlns=\"sap.m\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns:semantic=\"sap.f.semantic\">\r\n\r\n+
\t<semantic:SemanticPage\r\n\t\tid=\"page\"\r\n\t\theaderPinnable=\"false\"\r\n\t\ttoggleHeaderOnTitleClick=\"false\">\r\n\r\n\t\t<semantic:titleHeading>\r\n\t\t\t<Title text=\"{i18n>worklistTitle}\" />\r\n\t\t</semantic:titleHeading>\r\n\r\n\t\t<semanti+
c:content>\r\n\t\t\t<Table\r\n\t\t\t\tid=\"table\"\r\n\t\t\t\twidth=\"auto\"\r\n\t\t\t\titems=\"{\r\n\t\t\t\t\tpath: '/VarHeadSet',\r\n\t\t\t\t\tsorter: {\r\n\t\t\t\t\t\tpath: 'Description',\r\n\t\t\t\t\t\tdescending: false\r\n\t\t\t\t\t}\r\n\t\t\t\t}\"\+
r\n\t\t\t\tnoDataText=\"{worklistView>/tableNoDataText}\"\r\n\t\t\t\tbusyIndicatorDelay=\"{worklistView>/tableBusyDelay}\"\r\n\t\t\t\tgrowing=\"true\"\r\n\t\t\t\tgrowingScrollToLoad=\"true\"\r\n\t\t\t\tupdateFinished=\"onUpdateFinished\">\r\n\r\n\t\t\t\t+
<headerToolbar>\r\n\t\t\t\t\t<Toolbar>\r\n\t\t\t\t\t\t<Title id=\"tableHeader\" text=\"{worklistView>/worklistTableTitle}\"/>\r\n\t\t\t\t\t\t<ToolbarSpacer />\r\n\t\t\t\t\t\t<SearchField\r\n\t\t\t\t\t\t\tid=\"searchField\"\r\n\t\t\t\t\t\t\ttooltip=\"{i18+
n>worklistSearchTooltip}\"\r\n\t\t\t\t\t\t\tsearch=\"onSearch\"\r\n\t\t\t\t\t\t\twidth=\"auto\">\r\n\t\t\t\t\t\t</SearchField>\r\n\t\t\t\t\t</Toolbar>\r\n\t\t\t\t</headerToolbar>\r\n\r\n\t\t\t\t<columns>\r\n\t\t\t\t\t<Column id=\"nameColumn\">\r\n\t\t\t\+
t\t\t<Text text=\"{i18n>tableNameColumnTitle}\" id=\"nameColumnTitle\"/>\r\n\t\t\t\t\t</Column>\r\n\t\t\t\t\t<Column id=\"unitNumberColumn\" hAlign=\"End\">\r\n\t\t\t\t\t\t<Text text=\"{i18n>tableUnitNumberColumnTitle}\" id=\"unitNumberColumnTitle\"/>\r\+
n\t\t\t\t\t</Column>\r\n\t\t\t\t</columns>\r\n\r\n\t\t\t\t<items>\r\n\t\t\t\t\t<ColumnListItem\r\n\t\t\t\t\t\ttype=\"Navigation\"\r\n\t\t\t\t\t\tpress=\"onPress\">\r\n\t\t\t\t\t\t<cells>\r\n\t\t\t\t\t\t\t<ObjectIdentifier\r\n\t\t\t\t\t\t\t\ttitle=\"{Desc+
ription}\"/>\r\n\t\t\t\t\t\t\t<ObjectNumber\r\n\t\t\t\t\t\t\t\tnumber=\"{\r\n\t\t\t\t\t\t\t\t\tpath: 'NumOfValues',\r\n\t\t\t\t\t\t\t\t\tformatter: '.formatter.numberUnit'\r\n\t\t\t\t\t\t\t\t}\"/>\r\n\t\t\t\t\t\t</cells>\r\n\t\t\t\t\t</ColumnListItem>\r\+
n\t\t\t\t</items>\r\n\t\t\t</Table>\r\n\t\t</semantic:content>\r\n\r\n\t\t<semantic:sendEmailAction>\r\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\r\n\t\t</semantic:sendEmailAction>\r\n\r\n\r\n\t</semantic:SemanticPag+
e>\r\n\r\n</mvc:View>",                                                                                                                                                                                                                                        
		"zwaworklist10/ZWEBABAP_WORKLIST10/view/ObjectNotFound.view.xml": "<mvc:View\r\n\tcontrollerName=\"zwaworklist10.ZWEBABAP_WORKLIST10.controller.NotFound\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<MessagePage\r\n\t\ttitle=\"{i1+
8n>objectTitle}\"\r\n\t\ttext=\"{i18n>noObjectFoundText}\"\r\n\t\ticon=\"{sap-icon://product}\"\r\n\t\tdescription=\"\"\r\n\t\tid=\"page\">\r\n\t\t<customDescription>\r\n\t\t\t<Link id=\"link\" text=\"{i18n>backToWorklist}\" press=\"onLinkPressed\" />\r\+
n\t\t</customDescription>\r\n\t</MessagePage>\r\n\r\n</mvc:View>",                                                                                                                                                                                             
		"zwaworklist10/ZWEBABAP_WORKLIST10/view/Object.view.xml": "<mvc:View\r\n\tcontrollerName=\"zwaworklist10.ZWEBABAP_WORKLIST10.controller.Object\"\r\n\txmlns=\"sap.m\"\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\txmlns:semantic=\"sap.f.semantic\">\r\n\r\n\t<s+
emantic:SemanticPage\r\n\t\tid=\"page\"\r\n\t\theaderPinnable=\"false\"\r\n\t\ttoggleHeaderOnTitleClick=\"false\"\r\n\t\tbusy=\"{objectView>/busy}\"\r\n\t\tbusyIndicatorDelay=\"{objectView>/delay}\">\r\n\r\n\t\t<semantic:titleHeading>\r\n\t\t\t<Title tex+
t=\"{Description}\" />\r\n\t\t</semantic:titleHeading>\r\n\r\n\t\t<semantic:headerContent>\r\n\t\t\t<ObjectNumber\r\n\t\t\t\tnumber=\"{\r\n\t\t\t\t\tpath: 'NumOfValues',\r\n\t\t\t\t\tformatter: '.formatter.numberUnit'\r\n\t\t\t\t}\"\r\n\t\t\t/>\r\n\t\t</+
semantic:headerContent>\r\n\r\n\t\t<semantic:sendEmailAction>\r\n\t\t\t<semantic:SendEmailAction id=\"shareEmail\" press=\"onShareEmailPress\"/>\r\n\t\t</semantic:sendEmailAction>\r\n\r\n\r\n\t</semantic:SemanticPage>\r\n\r\n</mvc:View>",                 
		"zwaworklist10/ZWEBABAP_WORKLIST10/view/App.view.xml": "<mvc:View\r\n\txmlns:mvc=\"sap.ui.core.mvc\"\r\n\tcontrollerName=\"zwaworklist10.ZWEBABAP_WORKLIST10.controller.App\"\r\n\tdisplayBlock=\"true\"\r\n\txmlns=\"sap.m\">\r\n\r\n\t<App id=\"app\"\r\n\+
t\t busy=\"{appView>/busy}\"\r\n\t\t busyIndicatorDelay=\"{appView>/delay}\"/>\r\n\r\n</mvc:View>",                                                                                                                                                            
		"zwaworklist10/ZWEBABAP_WORKLIST10/model/models.js": "sap.ui.define([\r\n\t\t\"sap/ui/model/json/JSONModel\",\r\n\t\t\"sap/ui/Device\"\r\n\t], function (JSONModel, Device) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn {\r\n\r\n\t\t\tcreateDeviceModel : fu+
nction () {\r\n\t\t\t\tvar oModel = new JSONModel(Device);\r\n\t\t\t\toModel.setDefaultBindingMode(\"OneWay\");\r\n\t\t\t\treturn oModel;\r\n\t\t\t}\r\n\r\n\r\n\t\t};\r\n\r\n\t}\r\n);",                                                                      
		"zwaworklist10/ZWEBABAP_WORKLIST10/model/formatter.js": "sap.ui.define([\r\n\t] , function () {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn {\r\n\r\n\t\t\t/**\r\n\t\t\t * Rounds the number unit value to 2 digits\r\n\t\t\t * @public\r\n\t\t\t * @param {str+
ing} sValue the number string to be rounded\r\n\t\t\t * @returns {string} sValue with 2 digits rounded\r\n\t\t\t */\r\n\t\t\tnumberUnit : function (sValue) {\r\n\t\t\t\tif (!sValue) {\r\n\t\t\t\t\treturn \"\";\r\n\t\t\t\t}\r\n\t\t\t\treturn parseFloat(sV+
alue).toFixed(2);\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t}\r\n);",                                                                                                                                                                                                  
		"zwaworklist10/ZWEBABAP_WORKLIST10/controller/NotFound.controller.js": "sap.ui.define([\r\n\t\t\"zwaworklist10/ZWEBABAP_WORKLIST10/controller/BaseController\"\r\n\t], function (BaseController) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn BaseController.e+
xtend(\"zwaworklist10.ZWEBABAP_WORKLIST10.controller.NotFound\", {\r\n\r\n\t\t\t/**\r\n\t\t\t * Navigates to the worklist when the link is pressed\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonLinkPressed : function () {\r\n\t\t\t\tthis.getRouter().navTo(\+
"worklist\");\r\n\t\t\t}\r\n\r\n\t\t});\r\n\r\n\t}\r\n);",                                                                                                                                                                                                     
		"zwaworklist10/ZWEBABAP_WORKLIST10/controller/BaseController.js": "sap.ui.define([\r\n\t\t\"sap/ui/core/mvc/Controller\"\r\n\t], function (Controller) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn Controller.extend(\"zwaworklist10.ZWEBABAP_WORKLIST10.cont+
roller.BaseController\", {\r\n\t\t\t/**\r\n\t\t\t * Convenience method for accessing the router.\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.ui.core.routing.Router} the router for this component\r\n\t\t\t */\r\n\t\t\tgetRouter : function () {\r\n\t\t\t+
\treturn sap.ui.core.UIComponent.getRouterFor(this);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for getting the view model by name.\r\n\t\t\t * @public\r\n\t\t\t * @param {string} [sName] the model name\r\n\t\t\t * @returns {sap.ui.model+
.Model} the model instance\r\n\t\t\t */\r\n\t\t\tgetModel : function (sName) {\r\n\t\t\t\treturn this.getView().getModel(sName);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Convenience method for setting the view model.\r\n\t\t\t * @public\r\n\t\t\t * @para+
m {sap.ui.model.Model} oModel the model instance\r\n\t\t\t * @param {string} sName the model name\r\n\t\t\t * @returns {sap.ui.mvc.View} the view instance\r\n\t\t\t */\r\n\t\t\tsetModel : function (oModel, sName) {\r\n\t\t\t\treturn this.getView().setMod+
el(oModel, sName);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Getter for the resource bundle.\r\n\t\t\t * @public\r\n\t\t\t * @returns {sap.ui.model.resource.ResourceModel} the resourceModel of the component\r\n\t\t\t */\r\n\t\t\tgetResourceBundle : functi+
on () {\r\n\t\t\t\treturn this.getOwnerComponent().getModel(\"i18n\").getResourceBundle();\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Event handler when the share by E-Mail button has been clicked\r\n\t\t\t * @public\r\n\t\t\t */\r\n\t\t\tonShareEmailPress+
 : function () {\r\n\t\t\t\tvar oViewModel = (this.getModel(\"objectView\") || this.getModel(\"worklistView\"));\r\n\t\t\t\tsap.m.URLHelper.triggerEmail(\r\n\t\t\t\t\tnull,\r\n\t\t\t\t\toViewModel.getProperty(\"/shareSendEmailSubject\"),\r\n\t\t\t\t\toVi+
ewModel.getProperty(\"/shareSendEmailMessage\")\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t}\r\n);",                                                                                                                                                         
		"zwaworklist10/ZWEBABAP_WORKLIST10/controller/ErrorHandler.js": "sap.ui.define([\r\n\t\t\"sap/ui/base/Object\",\r\n\t\t\"sap/m/MessageBox\"\r\n\t], function (UI5Object, MessageBox) {\r\n\t\t\"use strict\";\r\n\r\n\t\treturn UI5Object.extend(\"zwaworkli+
st10.ZWEBABAP_WORKLIST10.controller.ErrorHandler\", {\r\n\r\n\t\t\t/**\r\n\t\t\t * Handles application errors by automatically attaching to the model events and displaying errors when needed.\r\n\t\t\t * @class\r\n\t\t\t * @param {sap.ui.core.UIComponent+
} oComponent reference to the app's component\r\n\t\t\t * @public\r\n\t\t\t * @alias zwaworklist10.ZWEBABAP_WORKLIST10.controller.ErrorHandler\r\n\t\t\t */\r\n\t\t\tconstructor : function (oComponent) {\r\n\t\t\t\tthis._oResourceBundle = oComponent.getMo+
del(\"i18n\").getResourceBundle();\r\n\t\t\t\tthis._oComponent = oComponent;\r\n\t\t\t\tthis._oModel = oComponent.getModel();\r\n\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\tthis._sErrorText = this._oResourceBundle.getText(\"errorText\");\r\n\r\n\t\t\t+
\tthis._oModel.attachMetadataFailed(function (oEvent) {\r\n\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t}, this);\r\n\r\n\t\t\t\tthis._oModel.attachRequestFailed(function (oEvent) {\r\n+
\t\t\t\t\tvar oParams = oEvent.getParameters();\r\n\t\t\t\t\t// An entity that was not found in the service is also throwing a 404 error in oData.\r\n\t\t\t\t\t// We already cover this case with a notFound target so we skip it here.\r\n\t\t\t\t\t// A req+
uest that cannot be sent to the server is a technical error that we have to handle though\r\n\t\t\t\t\tif (oParams.response.statusCode !== \"404\" || (oParams.response.statusCode === 404 && oParams.response.responseText.indexOf(\"Cannot POST\") === 0)) {+
\r\n\t\t\t\t\t\tthis._showServiceError(oParams.response);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, this);\r\n\t\t\t},\r\n\r\n\t\t\t/**\r\n\t\t\t * Shows a {@link sap.m.MessageBox} when a service call has failed.\r\n\t\t\t * Only the first error message will be displ+
ay.\r\n\t\t\t * @param {string} sDetails a technical error to be displayed on request\r\n\t\t\t * @private\r\n\t\t\t */\r\n\t\t\t_showServiceError : function (sDetails) {\r\n\t\t\t\tif (this._bMessageOpen) {\r\n\t\t\t\t\treturn;\r\n\t\t\t\t}\r\n\t\t\t\tt+
his._bMessageOpen = true;\r\n\t\t\t\tMessageBox.error(\r\n\t\t\t\t\tthis._sErrorText,\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid : \"serviceErrorMessageBox\",\r\n\t\t\t\t\t\tdetails: sDetails,\r\n\t\t\t\t\t\tstyleClass: this._oComponent.getContentDensityClass(),\r+
\n\t\t\t\t\t\tactions: [MessageBox.Action.CLOSE],\r\n\t\t\t\t\t\tonClose: function () {\r\n\t\t\t\t\t\t\tthis._bMessageOpen = false;\r\n\t\t\t\t\t\t}.bind(this)\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n);"                              
	}                                                                                                                                                                                                                                                             
});                                                                                                                                                                                                                                                            